---
- name: copy backblaze auth worker
  template:
    src: b2AuthorizeCfWorker.j2
    dest: /opt/b2AuthorizeCfWorker.py
    mode: '0777'

- name: Create cronjob for b2 cloudflare worker authorization refresh
  cron:
    name: "reauthb2"
    minute: "0"
    hour: "1"
    weekday: "1,5"
    job: "/usr/bin/python3 /opt/b2AuthorizeCfWorker.py"

- name: Clone B2 CLI repo
  git:
    repo: 'https://github.com/Backblaze/B2_Command_Line_Tool.git'
    dest: /root/B2_Command_Line_Tool
    clone: yes
    update: yes

- name: Install B2 CLI
  shell: /usr/bin/python3 setup.py install
  args:
    chdir: /root/B2_Command_Line_Tool

- name: Create backup script
  copy:
    dest: "/root/backup_database.sh"
    content: "{{ backup_database_script }}"
    mode: '0777'

- name: Create backup folder
  file:
    path: /opt/dbbackup/
    state: directory
    mode: '0777'

- name: Create cronjob for database backup
  cron:
    name: "backup_mysql"
    minute: "5"
    hour: "4"
    job: "/bin/bash /root/backup_database.sh"

- name: Download and restore latest backup
  shell: |
    FILE=/opt/dbbackup/backup.sql
    export HOME=/root
    /usr/local/bin/b2 authorize-account {{ b2AppKeyIdBackup }} {{ b2AppKeyBackup }} || true
    /usr/local/bin/b2 download-file-by-name dbbucket backup.sql $FILE || true
    if [ -f "$FILE" ]; then
        echo "$FILE already exists."
    else
        touch $FILE
    fi
    mysql -u root < $FILE

  args:
    executable: /bin/bash
    chdir: /root